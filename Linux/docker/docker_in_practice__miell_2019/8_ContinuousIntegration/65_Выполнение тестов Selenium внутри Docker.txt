RUNNING SELENIUM TESTS INSIDE DOCKER


проверка сокета Unix
$ ls /tmp/.X11-unix/
X0
$ echo $DISPLAY
:0



запускаем контейнер, используя экран с поддержкой Xauthority
Listing 8.7. Starting a container with an Xauthority-enabled display
$ ls $HOME/.Xauthority
/home/myuser/.Xauthority
$ docker run -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix \
         --hostname=$HOSTNAME -v $HOME/.Xauthority:$HOME/.Xauthority \
         -it -e EXTUSER=$USER ubuntu:16:04 bash -c 'useradd $USER && exec bash'


проверить работает ли контейнер
$ apt-get update && apt-get install -y x11-apps
$ su - $EXTUSER -c "xeyes"

Listing 8.9. Installing the Selenium requirements and starting a browser
root@myhost:/# apt-get install -y python2.7 python-pip firefox wget
[...]
root@myhost:/# pip install selenium
Collecting selenium
[...]
Successfully installed selenium-3.5.0
root@myhost:/# url=https://github.com/mozilla/geckodriver/releases/download
 /v0.18.0/geckodriver-v0.18.0-linux64.tar.gz
root@myhost:/# wget -qO- $url | tar -C /usr/bin -zxf -
root@myhost:/# python
Python 2.7.6 (default, Mar 22 2014, 22:59:56)
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from selenium import webdriver
>>> b = webdriver.Firefox()
>>> b.get('https://github.com/search')
>>> searchselector = '#search_form input[type="text"]'
>>> searchbox = b.find_element_by_css_selector(searchselector)
>>> searchbox.send_keys('docker-in-practice')
>>> searchbox.submit()
>>> import time
>>> time.sleep(2) # wait for page JS to run
>>> usersxpath = '//nav//a[contains(text(), "Users")]'
>>> userslink = b.find_element_by_xpath(usersxpath)
>>> userslink.click()
>>> dlinkselector = '.user-list-info a'
>>> dlink = b.find_elements_by_css_selector(dlinkselector)[0]
>>> dlink.click()
>>> mlinkselector = '.meta-item a'
>>> mlink = b.find_element_by_css_selector(mlinkselector)
>>> mlink.click()

Listing 8.10. Creating a Selenium test script
>>> exit()
root@myhost:/# apt-get install -y xvfb
[...]
root@myhost:/# exit
$ docker commit ef351febcee4 selenium
d1cbfbc76790cae5f4ae95805a8ca4fc4cd1353c72d7a90b90ccfb79de4f2f9b
$ cat > myscript.py << EOF
from selenium import webdriver
b = webdriver.Firefox()
print 'Visiting github'
b.get('https://github.com/search')
print 'Performing search'
searchselector = '#search_form input[type="text"]'
searchbox = b.find_element_by_css_selector(searchselector)
searchbox.send_keys('docker-in-practice')
searchbox.submit()
print 'Switching to user search'
import time
time.sleep(2) # wait for page JS to run
usersxpath = '//nav//a[contains(text(), "Users")]'
userslink = b.find_element_by_xpath(usersxpath)
userslink.click()
print 'Opening docker in practice user page'
dlinkselector = '.user-list-info a'
dlink = b.find_elements_by_css_selector(dlinkselector)[99]
dlink.click()
print 'Visiting docker in practice site'
mlinkselector = '.meta-item a'
mlink = b.find_element_by_css_selector(mlinkselector)
mlink.click()
print 'Done!'
EOF


Firefox все еще нужен X-сервер для запуска
xvfb   - делает вид, что X-сервер работает для приложений, но ему не нужен монитор


$ apt-get install -y xvfb
$ exit

$ docker commit ef351...

$ cat > myscript.py << EOF
b=webdriver.Firefox()
b.get('https://github.com/search')
...

$ docker run --rm -v $(pwd):/mnt selenium sh -c \
   "xvfb-run -s '-screen 011024x768x24 -extension RANDR' python /mnt/myscript.py"

