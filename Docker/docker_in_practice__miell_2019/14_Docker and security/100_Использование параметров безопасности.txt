USING SECURITY OPTIONS


Use SELinux to impose constraints on your containers.


# sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   permissive
Mode from config file:          permissive
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28


[SELinux on a Vagrant machine]


Listing 14.14. Installing ShutIt
sudo su -                                                     1
 apt-get install -y git python-pip docker.io || \
yum install -y git python-pip docker.io                       2
 pip install shutit                                           3
 git clone https://github.com/ianmiell/docker-selinux.git     4
 cd docker-selinux                                            4
 shutit build --delivery bash \                               5
 -s io.dockerinpractice.docker_selinux.docker_selinux \
  compile_policy no                                           6



Pause point:
Have a shell:
You can now type in commands and alter the state of the target.
Hit return to see the prompt
Hit CTRL and ] at the same time to continue with build

Hit CTRL and u to save the state


[Compiling an SELinux policy]

Listing 14.15. SELinux status once installed and enabled
# sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   permissive
Mode from config file:          permissive
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28


Listing 14.16. Creating a SELinux policy
mkdir -p /root/httpd_selinux_policy && >
cd /root/httpd_selinux_policy                                              1
 cat > docker_apache.te << END                                             2
 policy_module(docker_apache,1.0)                                          3
 virt_sandbox_domain_template(docker_apache)                               4
 allow docker_apache_t self: capability { chown dac_override kill setgid >
setuid net_bind_service sys_chroot sys_nice >
sys_tty_config } ;                                                         5
 allow docker_apache_t self:tcp_socket >
create_stream_socket_perms;                                                6
 allow docker_apache_t self:udp_socket >                                   6
create_socket_perms;                                                       6
 corenet_tcp_bind_all_nodes(docker_apache_t)                               6
 corenet_tcp_bind_http_port(docker_apache_t)                               6
 corenet_udp_bind_all_nodes(docker_apache_t)                               6
 corenet_udp_bind_http_port(docker_apache_t)                               6
 sysnet_dns_name_resolve(docker_apache_t)                                  7
 #permissive docker_apache_t                                               8
 END                                                                       9



$ make -f /usr/share/selinux/devel/Makefile \
docker_apache.te                                                  1
 Compiling targeted docker_apache module
/usr/bin/checkmodule:  loading policy configuration from >
tmp/docker_apache.tmp
/usr/bin/checkmodule:  policy configuration loaded
/usr/bin/checkmodule:  writing binary representation (version 17) >
to tmp/docker_apache.mod
Creating targeted docker_apache.pp policy package
rm tmp/docker_apache.mod tmp/docker_apache.mod.fc
$ semodule -i docker_apache.pp                                    2
$ setenforce Enforcing                                           3
$ docker run -ti --name selinuxdock >
--security-opt label:type:docker_apache_t httpd                   4
 Unable to find image 'httpd:latest' locally
latest: Pulling from library/httpd
2a341c7141bd: Pull complete
[...]
Status: Downloaded newer image for httpd:latest
permission denied
Error response from daemon: Cannot start container >
650c446b20da6867e6e13bdd6ab53f3ba3c3c565abb56c4490b487b9e8868985: >
[8] System error: permission denied
$ docker rm -f selinuxdock                                        5
 selinuxdock
$ setenforce Permissive                                           6
 $ docker run -d --name selinuxdock >
--security-opt label:type:docker_apache_t httpd                   7


[Checking for violations]
$ grep -w denied /var/log/audit/audit.log
type=AVC msg=audit(1433073250.049:392): avc:  >                        1
 denied  { transition } for >                                          2
 pid=2379 comm="docker" >                                              3
 path="/usr/local/bin/httpd-foreground" dev="dm-1" ino=530204 >        4
 scontext=system_u:system_r:init_t:s0 >
tcontext=system_u:system_r:docker_apache_t:s0:c740,c787 >              5
 tclass=process                                                        6
 type=AVC msg=audit(1433073250.049:392): avc:  denied  { write } for  >
pid=2379 comm="httpd-foregroun" path="pipe:[19550]" dev="pipefs" >
ino=19550 scontext=system_u:system_r:docker_apache_t:s0:c740,c787 >
tcontext=system_u:system_r:init_t:s0 tclass=fifo_file
type=AVC msg=audit(1433073250.236:394): avc:  denied  { append } for  >
pid=2379 comm="httpd" dev="pipefs" ino=19551 >
scontext=system_u:system_r:docker_apache_t:s0:c740,c787 >
tcontext=system_u:system_r:init_t:s0 tclass=fifo_file
type=AVC msg=audit(1433073250.236:394): avc:  denied  { open } for  >
pid=2379 comm="httpd" path="pipe:[19551]" dev="pipefs" ino=19551 >
scontext=system_u:system_r:docker_apache_t:s0:c740,c787 >
tcontext=system_u:system_r:init_t:s0 tclass=fifo_file
[...]


[Patching SELinux violations]
Listing 14.17. Creating a new SELinux policy
mkdir -p /root/selinux_policy_httpd_auto       1
 cd /root/selinux_policy_httpd_auto
audit2allow -a -w                              2
 audit2allow -a -M newmodname create policy    3
 semodule -i newmodname.pp                     4

[Testing your new module]
Listing 14.18. Starting a container with SELinux restrictions
$ docker rm -f selinuxdock
setenforce Enforcing
$ docker run -d --name selinuxdock \
--security-opt label:type:docker_apache_t httpd
$ docker logs selinuxdock
grep -w denied /var/log/audit/audit.log

